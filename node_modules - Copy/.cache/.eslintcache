[{"E:\\Gaurav\\nodedev\\my-react-app\\src\\index.js":"1","E:\\Gaurav\\nodedev\\my-react-app\\src\\App.js":"2","E:\\Gaurav\\nodedev\\my-react-app\\src\\reportWebVitals.js":"3","E:\\Gaurav\\nodedev\\my-react-app\\src\\components\\News.js":"4"},{"size":500,"mtime":1648835315662,"results":"5","hashOfConfig":"6"},{"size":290,"mtime":1648843864636,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1648835315725,"results":"8","hashOfConfig":"6"},{"size":6012,"mtime":1648882197641,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"109bz94",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"E:\\Gaurav\\nodedev\\my-react-app\\src\\index.js",[],[],"E:\\Gaurav\\nodedev\\my-react-app\\src\\App.js",["23"],[],"E:\\Gaurav\\nodedev\\my-react-app\\src\\reportWebVitals.js",[],[],"E:\\Gaurav\\nodedev\\my-react-app\\src\\components\\News.js",["24"],[],"import React from \"react\";\r\nimport axios from \"axios\";\r\nexport default class News extends React.Component {\r\n\r\n  \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        username: \"\",\r\n        check1:0,\r\n        check2:0,\r\n        check3:0,\r\n        mData: [{username: \"ABC\", check1: \"1\", check2: \"0\", check3: \"1\" }, {username: \"test\", check1: \"1\", check2: \"1\", check3: \"1\" }, {username: \"XYZ\", check1: \"0\", check2: \"0\", check3: \"1\" }, {username: \"123\", check1: \"1\", check2: \"0\", check3: \"0\" }, ],\r\n        found: false,\r\n        showsubmit: false,\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n  }\r\n\r\n\r\n  onChange = (e) => {\r\n    // Because we named the inputs to match their corresponding values in state, it's\r\n    // super easy to update the state\r\n    const state = this.state\r\n    state[e.target.name] = e.target.value;\r\n    this.setState(state);\r\n    console.log(state);\r\n  }\r\n\r\n  onClickuser = (e) => {\r\n    this.setState({check1: 0, check2: 0, check3: 0, found:false, showsubmit:false})\r\n    const username = this.state.username\r\n    var data = this.state.mData;\r\n    for(var k in data){\r\n        var obj = data[k];\r\n        if(obj.username === username){\r\n            //console.log(\"Found\");\r\n            this.setState({check1: obj.check1, check2: obj.check2, check3: obj.check3, found:true, showsubmit:true})\r\n        }else{\r\n            //console.log(\"Available\");\r\n        }\r\n    }\r\n    this.setState({showsubmit:true})\r\n  }\r\n\r\n  \r\n  onChangecb = (e) => {\r\n    const state = this.state\r\n    if (e.target.checked) {\r\n      state[e.target.name] = e.target.value;\r\n    } else {\r\n      state[e.target.name] = 0;\r\n    }\r\n    this.setState(state);\r\n  }\r\n\r\n\r\n    \r\nonSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username,check1,check2,check3,found  } = this.state;\r\n    if(found){\r\n        var temp_ar = {check1: check1, check2: check2, check3: check3}\r\n        const fData = this.state.mData.map((data, sidx) => {\r\n          if (data.username !== username) return data;\r\n          return { ...data, ...temp_ar};\r\n        });\r\n        console.log(fData);\r\n        this.setState({ mData: fData, username: \"\",check1:0,check2:0,check3:0, found: false, showsubmit: false });\r\n    }else{ \r\n        this.setState({ mData: this.state.mData.concat([{ username: username, check1: check1, check2: check2, check3: check3  }]), username: \"\",check1:0,check2:0,check3:0, found: false, showsubmit: false });\r\n    }\r\n    console.log(this.state)\r\n    alert(\"Successfully Saved\");\r\n  }\r\n\r\nonCancel = (e) => {\r\n    e.preventDefault();\r\n    this.setState({username: \"\",check1:0,check2:0,check3:0, found: false, showsubmit: false})\r\n  }\r\n  render() {\r\n    const { username,check1,check2,check3 } = this.state;\r\n\r\n    return (\r\n      <div id=\"content\">\r\n        \r\n        <form  noValidate=\"novalidate\" onSubmit={this.onSubmit}>\r\n\r\n                        <fieldset style={{padding: \"30px\"}}>\r\n                            <section className=\"col col-3\">\r\n                                <label className=\"label\">Username :</label>\r\n                                <label className=\"input\">\r\n                                {\" \"}\r\n                                <input style={{height: \"36px\", width: \"300px\"}} type=\"text\" name=\"username\" value={username} placeholder=\"Username\"  onChange={this.onChange} />\r\n                                {\" \"}\r\n                                </label> \r\n                                <span onClick={(e) => this.onClickuser(e)} style={{fontSize: \"18px\", backgroundColor: \"#008116\", color: \"white\", padding: \"3px\", borderRadius: \"3px\", cursor: \"pointer\"}}>Check User</span>                             \r\n                                {this.state.found ? <span style={{color:\"green\"}}> &nbsp;User found</span> : \"\"}\r\n                            </section>\r\n\r\n                            <section style={{marginTop: \"10px\"}}>\r\n                                <label className=\"toggle\" style={{fontSize: \"24px\"}}>\r\n                                    <input style={{ width: \"20px\", height: \"20px\"}} type=\"checkbox\" name=\"check1\" value={1} checked={check1 > 0 ? true : false} onChange={this.onChangecb} />\r\n                                    <span>Check 1</span>\r\n                                </label>\r\n                            </section>\r\n\r\n                            <section>\r\n                                <label className=\"toggle\" style={{fontSize: \"24px\"}}>\r\n                                    <input style={{ width: \"20px\", height: \"20px\"}} type=\"checkbox\" name=\"check2\" value={1} checked={check2 > 0 ? true : false} onChange={this.onChangecb} />\r\n                                    Check 2\r\n                                </label>\r\n                            </section>\r\n\r\n                            <section>\r\n                                <label className=\"toggle\" style={{fontSize: \"24px\"}}>\r\n                                    <input style={{ width: \"20px\", height: \"20px\"}} type=\"checkbox\" name=\"check3\" value={1} checked={check3 > 0 ? true : false} onChange={this.onChangecb} />\r\n                                    Check 3\r\n                                </label>\r\n                            </section>\r\n                        \r\n                        </fieldset>\r\n                        \r\n\r\n                        {this.state.showsubmit ? \r\n                        <footer style={{padding: \"20px\"}}>\r\n                          <button type=\"submit\"  style={{fontSize: \"18px\", backgroundColor: \"#0081ff\", color: \"white\", padding: \"3px\", borderRadius: \"3px\", cursor: \"pointer\", border: \"none\"}}>{this.state.found ? \"Update\" : \"Submit\"}</button>\r\n                          &nbsp;&nbsp;\r\n                          <span type=\"reset\" onClick={(e) => this.onCancel(e)}  style={{fontSize: \"16px\", backgroundColor: \"#8b8b8b\", color: \"white\", padding: \"3px\", borderRadius: \"3px\", cursor: \"pointer\"}}>Cancel</span>\r\n                        </footer>\r\n                        : \"\"}\r\n                      </form>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",{"ruleId":"25","severity":1,"message":"26","line":1,"column":8,"nodeType":"27","messageId":"28","endLine":1,"endColumn":12},{"ruleId":"25","severity":1,"message":"29","line":2,"column":8,"nodeType":"27","messageId":"28","endLine":2,"endColumn":13},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used."]